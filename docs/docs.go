// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bottles": {
            "get": {
                "description": "Get all bottles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Show all bottles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.BottleResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing bottle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Update a bottle",
                "parameters": [
                    {
                        "description": "Bottle",
                        "name": "bottle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateBottleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BottleResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new bottle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Create a bottle",
                "parameters": [
                    {
                        "description": "Bottle",
                        "name": "bottle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateBottleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.BottleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing bottle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Delete a bottle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bottle ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/consumer_test_answers": {
            "get": {
                "description": "Get all consumer test answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_answers"
                ],
                "summary": "Show all consumer test answers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ConsumerTestAnswerResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing consumer test answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_answers"
                ],
                "summary": "Update a consumer test answer",
                "parameters": [
                    {
                        "description": "Consumer Test Answer",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateConsumerTestAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestAnswerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consumer test answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_answers"
                ],
                "summary": "Create a consumer test answer",
                "parameters": [
                    {
                        "description": "Consumer Test Answer",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateConsumerTestAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestAnswerResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing consumer test answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_answers"
                ],
                "summary": "Delete a consumer test answer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consumer Test Answer ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/consumer_test_questions": {
            "get": {
                "description": "Get all consumer test questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_questions"
                ],
                "summary": "Show all consumer test questions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ConsumerTestQuestionResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing consumer test question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_questions"
                ],
                "summary": "Update a consumer test question",
                "parameters": [
                    {
                        "description": "Consumer Test Question",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateConsumerTestQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestQuestionResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consumer test question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_questions"
                ],
                "summary": "Create a consumer test question",
                "parameters": [
                    {
                        "description": "Consumer Test Question",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateConsumerTestQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestQuestionResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing consumer test question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_test_questions"
                ],
                "summary": "Delete a consumer test question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consumer Test Question ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/consumer_tests": {
            "get": {
                "description": "Get all consumer tests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_tests"
                ],
                "summary": "Show all consumer tests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ConsumerTestResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing consumer test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_tests"
                ],
                "summary": "Update a consumer test",
                "parameters": [
                    {
                        "description": "Consumer Test",
                        "name": "test",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateConsumerTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new consumer test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_tests"
                ],
                "summary": "Create a consumer test",
                "parameters": [
                    {
                        "description": "Consumer Test",
                        "name": "test",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateConsumerTestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.ConsumerTestResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing consumer test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer_tests"
                ],
                "summary": "Delete a consumer test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Consumer Test ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/contribution/community": {
            "get": {
                "description": "Get the total water amount and savings for the community",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contribution"
                ],
                "summary": "Get community contribution",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ContributionCommunityResponse"
                        }
                    }
                }
            }
        },
        "/contribution/kl": {
            "get": {
                "description": "Get the number of smart and manual refill stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contribution"
                ],
                "summary": "Get contribution by station type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ContributionKLResponse"
                        }
                    }
                }
            }
        },
        "/contribution/user": {
            "get": {
                "description": "Get the total water amount and savings for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contribution"
                ],
                "summary": "Get user contribution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ContributionUserResponse"
                        }
                    }
                }
            }
        },
        "/likes": {
            "get": {
                "description": "Get all likes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Show all likes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.LikeResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Update a like",
                "parameters": [
                    {
                        "description": "Like",
                        "name": "like",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.LikeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Create a like",
                "parameters": [
                    {
                        "description": "Like",
                        "name": "like",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.LikeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing like",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Delete a like",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Like ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/refill_station_problems": {
            "get": {
                "description": "Get all refill station problems",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_problems"
                ],
                "summary": "Show all refill station problems",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.RefillStationProblemResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing refill station problem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_problems"
                ],
                "summary": "Update a refill station problem",
                "parameters": [
                    {
                        "description": "Refill Station Problem",
                        "name": "problem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateRefillStationProblemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationProblemResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new refill station problem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_problems"
                ],
                "summary": "Create a refill station problem",
                "parameters": [
                    {
                        "description": "Refill Station Problem",
                        "name": "problem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateRefillStationProblemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationProblemResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing refill station problem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_problems"
                ],
                "summary": "Delete a refill station problem",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station Problem ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/refill_station_review/average": {
            "get": {
                "description": "Get the average review score for a refill station by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_reviews"
                ],
                "summary": "Get the average review score for a refill station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/refill_station_reviews": {
            "get": {
                "description": "Get all refill station reviews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_reviews"
                ],
                "summary": "Show all refill station reviews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.RefillStationReviewResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing refill station review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_reviews"
                ],
                "summary": "Update a refill station review",
                "parameters": [
                    {
                        "description": "Refill Station Review",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateRefillStationReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationReviewResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new refill station review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_reviews"
                ],
                "summary": "Create a refill station review",
                "parameters": [
                    {
                        "description": "Refill Station Review",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateRefillStationReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationReviewResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing refill station review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_station_reviews"
                ],
                "summary": "Delete a refill station review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station Review ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/refill_stations": {
            "get": {
                "description": "Get all refill stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Show all refill stations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.RefillStationResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing refill station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Update a refill station",
                "parameters": [
                    {
                        "description": "Refill Station",
                        "name": "station",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateRefillStationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new refill station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Create a refill station",
                "parameters": [
                    {
                        "description": "Refill Station",
                        "name": "station",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateRefillStationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing refill station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Delete a refill station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/refill_stations/markers": {
            "get": {
                "description": "Get all refill station markers with specific attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Get all refill station markers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.RefillStationMarkerResponse"
                            }
                        }
                    }
                }
            }
        },
        "/refill_stations/{id}": {
            "get": {
                "description": "Get a refill station by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refill_stations"
                ],
                "summary": "Get a refill station by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RefillStationResponse"
                        }
                    }
                }
            }
        },
        "/refillstation_like": {
            "get": {
                "description": "Check if a specific user likes a specific refill station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Check if a user likes a refill station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station ID",
                        "name": "refillstationId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.IsLikedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a like for a specific refill station by a specific user if it doesn't already exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "likes"
                ],
                "summary": "Create a like for a refill station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Refill Station ID",
                        "name": "refillstationId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.LikeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.UserResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UserResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/water_transactions": {
            "get": {
                "description": "Get all water transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "water_transactions"
                ],
                "summary": "Show all water transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.WaterTransactionResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing water transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "water_transactions"
                ],
                "summary": "Update a water transaction",
                "parameters": [
                    {
                        "description": "Water Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateWaterTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.WaterTransactionResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new water transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "water_transactions"
                ],
                "summary": "Create a water transaction",
                "parameters": [
                    {
                        "description": "Water Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateWaterTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.WaterTransactionResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing water transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "water_transactions"
                ],
                "summary": "Delete a water transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Water Transaction ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "database.ConsumerTestAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "questionID": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "database.ConsumerTestQuestion": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.ConsumerTestAnswer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "maxValue": {
                    "type": "number"
                },
                "minValue": {
                    "type": "number"
                },
                "testID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "main.BottleResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "fill_volume": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "nfc_id": {
                    "type": "string"
                },
                "path_image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        },
        "main.ConsumerTestAnswerResponse": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.ConsumerTestQuestionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_value": {
                    "type": "number"
                },
                "min_value": {
                    "type": "number"
                },
                "test_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "main.ConsumerTestResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "main.ContributionCommunityResponse": {
            "type": "object",
            "properties": {
                "amountFillings": {
                    "type": "integer"
                },
                "amountUser": {
                    "type": "integer"
                },
                "amountWater": {
                    "type": "integer"
                },
                "savedMoney": {
                    "type": "number"
                },
                "savedTrash": {
                    "type": "number"
                }
            }
        },
        "main.ContributionKLResponse": {
            "type": "object",
            "properties": {
                "amountRefillStationManual": {
                    "type": "integer"
                },
                "amountRefillStationSmart": {
                    "type": "integer"
                }
            }
        },
        "main.ContributionUserResponse": {
            "type": "object",
            "properties": {
                "amountFillings": {
                    "type": "integer"
                },
                "amountWater": {
                    "type": "integer"
                },
                "savedMoney": {
                    "type": "number"
                },
                "savedTrash": {
                    "type": "number"
                }
            }
        },
        "main.CreateBottleRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "fill_volume": {
                    "type": "integer"
                },
                "nfc_id": {
                    "type": "string"
                },
                "path_image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        },
        "main.CreateConsumerTestAnswerRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "number"
                },
                "question_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.CreateConsumerTestQuestionRequest": {
            "type": "object",
            "properties": {
                "max_value": {
                    "type": "number"
                },
                "min_value": {
                    "type": "number"
                },
                "test_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "main.CreateConsumerTestRequest": {
            "type": "object",
            "properties": {
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.ConsumerTestQuestion"
                    }
                }
            }
        },
        "main.CreateLikeRequest": {
            "type": "object",
            "properties": {
                "station_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.CreateRefillStationProblemRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "link_to_media": {
                    "type": "string"
                },
                "station_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.CreateRefillStationRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "like_counter": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "offered_water_types": {
                    "type": "string"
                },
                "opening_times": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "water_source": {
                    "type": "string"
                }
            }
        },
        "main.CreateRefillStationReviewRequest": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "type": "integer"
                },
                "cleanness": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_quality": {
                    "type": "integer"
                }
            }
        },
        "main.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "main.CreateWaterTransactionRequest": {
            "type": "object",
            "properties": {
                "bottle_id": {
                    "type": "integer"
                },
                "guest": {
                    "type": "boolean"
                },
                "station_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.IsLikedResponse": {
            "type": "object",
            "properties": {
                "isLiked": {
                    "type": "boolean"
                }
            }
        },
        "main.LikeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.RefillStationMarkerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "main.RefillStationProblemResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link_to_media": {
                    "type": "string"
                },
                "station_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.RefillStationResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_path": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "like_counter": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "offered_water_types": {
                    "type": "string"
                },
                "opening_times": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "water_source": {
                    "type": "string"
                }
            }
        },
        "main.RefillStationReviewResponse": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "type": "integer"
                },
                "cleanness": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_quality": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateBottleRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "fill_volume": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "nfc_id": {
                    "type": "string"
                },
                "path_image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        },
        "main.UpdateConsumerTestAnswerRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateConsumerTestQuestionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_value": {
                    "type": "number"
                },
                "min_value": {
                    "type": "number"
                },
                "test_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "main.UpdateConsumerTestRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.ConsumerTestQuestion"
                    }
                }
            }
        },
        "main.UpdateLikeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateRefillStationProblemRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link_to_media": {
                    "type": "string"
                },
                "station_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.UpdateRefillStationRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_path": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "like_counter": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "offered_water_types": {
                    "type": "string"
                },
                "opening_times": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "water_source": {
                    "type": "string"
                }
            }
        },
        "main.UpdateRefillStationReviewRequest": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "type": "integer"
                },
                "cleanness": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "water_quality": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "main.UpdateWaterTransactionRequest": {
            "type": "object",
            "properties": {
                "bottle_id": {
                    "type": "integer"
                },
                "guest": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        },
        "main.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "main.WaterTransactionResponse": {
            "type": "object",
            "properties": {
                "bottle_id": {
                    "type": "integer"
                },
                "guest": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "station_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                },
                "water_type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server for a water station.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
